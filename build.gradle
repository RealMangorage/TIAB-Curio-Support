plugins {
    id 'net.minecraftforge.gradle' version '5.1.+'
    id 'org.parchmentmc.librarian.forgegradle' version '1.+'
}

group = 'me.mangorage'
version = "${mc_version}-${mod_version}"
archivesBaseName = 'curiotiab'

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

sourceSets {
    datagen {
        compileClasspath += configurations.getByName("minecraft")
        compileClasspath += sourceSets.main.output
        runtimeClasspath += sourceSets.main.output
    }

    tests {
        compileClasspath += configurations.getByName("minecraft")
    }

    main {
        java {
            srcDir "src/main/java"
        }

        resources {
            srcDir "src/generated/resources"
        }
    }
}


minecraft {
    mappings channel: 'parchment', version: "${parchment_version}-${mc_version}"

    runs {
        client {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'curiotiab'

            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${buildDir}/createSrgToMcp/output.srg"

            mods {
                curiotiab {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'curiotiab'

            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${buildDir}/createSrgToMcp/output.srg"

            mods {
                curiotiab {
                    source sourceSets.main
                }
            }
        }

        gameTestServer {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'curiotiab'

            mods {
                curiotiab {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${buildDir}/createSrgToMcp/output.srg"

            args '--mod', 'curiotiab', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                curiotiab {
                    source sourceSets.main
                    source sourceSets.datagen
                }
            }
        }
    }
}

repositories {
    maven {
        url "https://cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }
    maven {
        url = "https://maven.theillusivec4.top/"
    }
    flatDir {
        dirs "libs\\"
    }
}

configurations {
    embed
}

dependencies {
    minecraft "net.minecraftforge:forge:${mc_version}-${forge_version}"

    if (mc_version.contentEquals("1.19.2")) {
        implementation fg.deobf("curse.maven:time-in-a-bottle-standalone-445025")
    } else if (mc_version.contains("1.20.1")) {
        //implementation fg.deobf("curse.maven:time-in-a-bottle-forge-895919:4669705")
        //implementation fg.deobf("haciot:time-in-a-bottle-4.0.1-mc:1.20.1")
        implementation fg.deobf("blank:time-in-a-bottle:4.0.1-mc1.20.1")
    }

    if (mc_version.contains("1.19.2")) {
        // DO stuff
    } else if (mc_version.contains("1.20.1")) {
        runtimeOnly fg.deobf("top.theillusivec4.curios:curios-forge:5.2.0-beta.3+${mc_version}")
        implementation fg.deobf("top.theillusivec4.curios:curios-forge:5.2.0-beta.3+${mc_version}:api")
    }
}


jar {
    finalizedBy('reobfJar')
    manifest {
        attributes([
                "Specification-Title"     : "curiotiab",
                //"Specification-Vendor": "curiotiab authors",
                "Specification-Version"   : "1", // We are version 1 of ourselves
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.jar.archiveVersion,
                //"Implementation-Vendor": "curiotiab authors",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8' // Use the UTF-8 charset for Java compilation
}
